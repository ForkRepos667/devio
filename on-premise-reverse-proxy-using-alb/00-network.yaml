AWSTemplateFormatVersion: '2010-09-09'
Description: VPC Network
Parameters:
  Prefix:
    Description: Enter a prefix of this system.
    Type: String
    Default: devio-alb-iptg
  CgwPublicIP:
    Description: Enter CustomerGateway Public IP
    Type: String
    Default: 0.0.0.0
  LocalCIDR:
    Description: Enter CIDR of local network
    Type: String
    Default: 192.168.10.0/24

Resources:
  # VPC
  VPC1:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-vpc1
  VPC2:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.200.0/24
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-vpc2

  # IGW
  IGW1:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${Prefix}-igw1
  IGW1Attach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref IGW1
      VpcId: !Ref VPC1

  # VPCPeering
  VPCPeering:
    Type: AWS::EC2::VPCPeeringConnection
    Properties: 
      VpcId: !Ref VPC1
      PeerVpcId: !Ref VPC2
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-vpcpeering

  # Subnet
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC1
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.0.0/27
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-subnet1
    
  Subnet2a:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC2
      AvailabilityZone: ap-northeast-1a
      CidrBlock: 10.0.200.0/27
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-subnet2-a
    
  Subnet2c:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC2
      AvailabilityZone: ap-northeast-1c
      CidrBlock: 10.0.200.32/27
      MapPublicIpOnLaunch: True
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-subnet2-c
    

  # Routing
  RouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-route-table-1
  RouteTable1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable1
      SubnetId: !Ref Subnet1
  Route1x:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW1
  Route1y:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable1
      DestinationCidrBlock: 10.0.200.0/24
      VpcPeeringConnectionId: !Ref VPCPeering
  RouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC2
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-route-table-2
  RouteTable2AssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable2
      SubnetId: !Ref Subnet2a
  RouteTable2AssociationC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable2
      SubnetId: !Ref Subnet2c
  Route2x:
    Type: AWS::EC2::Route
    DependsOn: AttachVGW
    Properties:
      RouteTableId: !Ref RouteTable2
      DestinationCidrBlock: !Ref LocalCIDR
      GatewayId: !Ref VGW
  Route2y:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable2
      DestinationCidrBlock: 10.0.0.0/24
      VpcPeeringConnectionId: !Ref VPCPeering

  # VPN
  CGW:
    Type: AWS::EC2::CustomerGateway
    Properties:
      Type: ipsec.1
      BgpAsn: 65000
      IpAddress: !Ref CgwPublicIP
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-cgw
  
  VGW:
    Type: AWS::EC2::VPNGateway
    Properties:
      Type: ipsec.1
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-vgw
  
  AttachVGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC2
      VpnGatewayId: !Ref VGW
  
  VPNConnection:
    Type: AWS::EC2::VPNConnection
    Properties:
      CustomerGatewayId: !Ref CGW
      StaticRoutesOnly: true
      Type: ipsec.1
      VpnGatewayId: !Ref VGW
      Tags:
        - Key: Name
          Value: !Sub ${Prefix}-vpn-connection
  
  VPNConnectionRoute:
    Type: AWS::EC2::VPNConnectionRoute
    Properties:
      DestinationCidrBlock: !Ref LocalCIDR
      VpnConnectionId: !Ref VPNConnection

Outputs:
  VPC1:
    Value: !Ref VPC1
    Export:
      Name: !Sub ${Prefix}-vpc1
  VPC2:
    Value: !Ref VPC2
    Export:
      Name: !Sub ${Prefix}-vpc2
  IGW1:
    Value: !Ref IGW1
    Export:
      Name: !Sub ${Prefix}-igw1
  VPCPeering:
    Value: !Ref VPCPeering
    Export:
      Name: !Sub ${Prefix}-vpcpeering
  Subnet1:
    Value: !Ref Subnet1
    Export:
      Name: !Sub ${Prefix}-subnet1
  Subnet2a:
    Value: !Ref Subnet2a
    Export:
      Name: !Sub ${Prefix}-subnet2-a
  Subnet2c:
    Value: !Ref Subnet2c
    Export:
      Name: !Sub ${Prefix}-subnet2-c
  RouteTable1:
    Value: !Ref RouteTable1
    Export:
      Name: !Sub ${Prefix}-route-table-1
  RouteTable2:
    Value: !Ref RouteTable2
    Export:
      Name: !Sub ${Prefix}-route-table-2
  CGW:
    Value: !Ref CGW
    Export:
      Name: !Sub ${Prefix}-cgw
  VGW:
    Value: !Ref VGW
    Export:
      Name: !Sub ${Prefix}-vgw
  VPNConnection:
    Value: !Ref VPNConnection
    Export:
      Name: !Sub ${Prefix}-vpn-connection
